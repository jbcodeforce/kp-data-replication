site_name: Data Replication in context of Kafka and Event Streams
repo_url: https://github.com/ibm-cloud-architecture/refarch-eda-data-consistency.git
nav:
  - Introduction: index.md
  - Environment provisioning:
      - Run local kafka cluster with docker compose: dc-local.md
      - Strimzi Kafka 2.4 Provisioning on Openshift: provisioning.md
      - MirrorMaker 2 Provisioning: mm2-provisioning.md
      - VM MirrorMaker 2 provisioning: vm-provisioning.md
      - Cloud Pak for integration provisioning: https://ocp42.cloudpak8s.io/integration/cp4i-install/
      
  - Replication Scenarios:
    - Replication from local to Event Streams: local-to-es.md
    - Replication from Event Streams to local : es-to-local.md
    - From Event Streams on OpenShift to Event Streams on Cloud : es-prem-to-es.md
  - Best practices:
    - Kafka Summary: https://ibm-cloud-architecture.github.io/refarch-eda/kafka/readme
    - Consumer practices: https://ibm-cloud-architecture.github.io/refarch-eda/kafka/consumers
    - Producer practices: https://ibm-cloud-architecture.github.io/refarch-eda/kafka/producers
    - Kafka Connect: https://ibm-cloud-architecture.github.io/refarch-eda/kafka/connect
    - Replicaton considerations: consideration.md
  - Operations: 
    - Monitoring with Prometheus and Grafana: monitoring.md
  - Security: security.md
  - Tests: perf-tests.md
  - Compendium: compendium.md
theme: 
  name: material
extra_css: ["extra.css"]
markdown_extensions:
  - admonition
  - codehilite
  - footnotes
  - pymdownx.smartsymbols
  - pymdownx.superfences
